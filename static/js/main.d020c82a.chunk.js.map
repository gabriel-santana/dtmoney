{"version":3,"sources":["assets/income.svg","assets/outcome.svg","assets/total.svg","components/Summary/styles.ts","components/Summary/index.tsx","services/api.ts","components/TransactionTable/styles.ts","components/TransactionTable/index.tsx","components/Dashboard/styles.ts","components/Dashboard/index.tsx","assets/logo.svg","components/Header/styles.ts","components/Header/index.tsx","assets/close.svg","components/NewTransactionModal/styles.ts","components/NewTransactionModal/index.tsx","styles/global.ts","App.tsx","index.tsx"],"names":["Container","styled","div","Summary","src","incomeImg","alt","outcomeImg","className","totalImg","api","axios","create","baseURL","TransactionsTable","useEffect","get","then","response","console","log","data","main","Dashboard","header","Content","Header","onOpenNewTransactionModal","logoImg","type","onClick","form","TransactionTypeContainer","colors","green","red","RadioBox","button","props","isActive","transparentize","activeColor","darken","NewTransactionModal","isOpen","onRequestClose","useState","title","setTitle","value","setValue","category","setCategory","setType","overlayClassName","closeImg","onSubmit","event","preventDefault","placeholder","onChange","target","Number","GlobalStyle","createGlobalStyle","App","isNewTransactionModalOpen","setIsNewTransactionModalOpen","Modal","setAppElement","createServer","routes","this","namespace","id","amount","createdAt","Date","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d020c82a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/income.d58effe2.svg\";","export default __webpack_public_path__ + \"static/media/outcome.6eb96d30.svg\";","export default __webpack_public_path__ + \"static/media/total.e90c2d1e.svg\";","import styled from \"styled-components\";\n\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 2rem;\n  margin-top: -10rem;\n\n  div {\n    background: var(--shape);\n    padding: 1.5rem 2rem;\n    border-radius: 0.25rem;\n    color: var(--text-title);\n\n    header {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n    }\n\n    strong {\n      display: block;\n      margin-top: 1rem;\n      font-size: 2rem;\n      font-weight: 500;\n      line-height: 3rem;\n    }\n\n    &.highlight-background {\n      background: var(--green);\n      color: #FFF;\n    }\n  }\n`;","import incomeImg from '../../assets/income.svg'\nimport outcomeImg from '../../assets/outcome.svg'\nimport totalImg from '../../assets/total.svg'\n\nimport { Container } from \"./styles\";\n\n\nexport function Summary() {\n  return (\n    <Container>\n      <div>\n        <header>\n          <p>Entradas</p>\n          <img src={incomeImg} alt=\"Entradas\" />\n        </header>\n        <strong>R$1000,00</strong>\n      </div>\n      <div>\n        <header>\n          <p>Saídas</p>\n          <img src={outcomeImg} alt=\"Saídas\" />\n        </header>\n        <strong>- R$500,00</strong>\n      </div>\n      <div className=\"highlight-background\">\n        <header>\n          <p>Total</p>\n          <img src={totalImg} alt=\"Total\" />\n        </header>\n        <strong>R$500,00</strong>\n      </div>\n    </Container>\n  )\n}","import axios from \"axios\";\n\nexport const api = axios.create({\n  baseURL: 'http://localhost:3000/api',\n})","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  margin-top: 4rem;\n\n  table {\n    width: 100%;\n    border-spacing: 0 0.5rem;\n\n    th {\n      color: var(--text-body);\n      font-weight: 400;\n      padding: 1rem 2rem;\n      text-align: left;\n      line-height: 1.5rem;\n    }\n\n    td {\n      padding: 1rem 2rem;\n      border: 0;\n      background: var(--shape);\n      color: var(--text-body);\n      border-radius: 0.25rem;\n\n      &:first-child {\n        color: var(--text-title);\n      }\n\n      &.deposit {\n        color: var(--green);\n      }\n\n      &.withdraw {\n        color: var(--red);\n      }\n    }\n  }\n`;","import { useEffect } from \"react\";\nimport { api } from \"../../services/api\";\nimport { Container } from \"./styles\";\n\nexport function TransactionsTable() {\n  useEffect(() => {\n    api.get('transactions')\n    .then(response => console.log(response.data))\n  }, []);\n\n  return (\n    <Container>\n      <table>\n        <thead>\n          <tr>\n            <th>Título</th>\n            <th>Valor</th>\n            <th>Categoria</th>\n            <th>Data</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          <tr>\n            <td>Desenvolvimento de website</td>\n            <td className=\"deposit\">R$1000,00</td>\n            <td>Desenvolvimento</td>\n            <td>20/02/2021</td>\n          </tr>\n          <tr>\n            <td>Aluguel</td>\n            <td className=\"withdraw\">- R$500,00</td>\n            <td>Casa</td>\n            <td>25/02/2021</td>\n          </tr>\n        </tbody>\n      </table>\n    </Container>\n  )\n}","import styled from \"styled-components\";\n\nexport const Container = styled.main`\n  max-width: 1120px;\n  margin: 0 auto;\n  padding: 2.5rem 1rem;\n`;","import { Summary } from \"../Summary\";\nimport { TransactionsTable } from \"../TransactionTable\";\n\nimport { Container } from \"./styles\";\n\nexport function Dashboard() {\n  return (\n    <Container>\n      <Summary />\n      <TransactionsTable />\n    </Container>\n  );\n}","export default __webpack_public_path__ + \"static/media/logo.614d71d1.svg\";","import styled from \"styled-components\";\n\nexport const Container = styled.header`\n  background: var(--blue);\n`;\n\nexport const Content = styled.div`\n  max-width: 1128px;\n  margin: 0 auto;\n\n  padding: 2rem 1rem 12rem;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  button {\n    font-size: 1rem;\n    color: #FFF;\n    background: var(--blue-light);\n    border: 0;\n    padding: 0 2rem;\n    border-radius: 0.25rem;\n    height: 3rem;\n\n    transition: filter 0.2s;\n\n    &:hover {\n      filter: brightness(0.9);\n    }\n  }\n`;","import logoImg from '../../assets/logo.svg'\n\nimport { Container, Content } from './styles'\n\ninterface HeaderProps {\n\tonOpenNewTransactionModal: () => void;\n}\n\nexport function Header({ onOpenNewTransactionModal }: HeaderProps) {\n    return (\n        <Container>\n\t\t\t\t\t<Content>\n            <img src={logoImg} alt=\"dt money\" />\n            <button type=\"button\" onClick={onOpenNewTransactionModal}>\n                Nova transação\n            </button>\n\t\t\t\t\t</Content>\n        </Container>\n        \n    )\n}","export default __webpack_public_path__ + \"static/media/close.f62862c6.svg\";","import styled from \"styled-components\";\nimport { darken, transparentize } from \"polished\";\n\nexport const Container = styled.form`\n  h2 {\n    color: var(--text-title);\n    font-size: 1.5rem;\n    margin-bottom: 2rem;\n  }\n\n  input {\n    width: 100%;\n    padding: 0 1.5rem;\n    height: 4rem;\n    border-radius: 0.25rem;\n\n    border: 1px solid #d7d7d7;\n    background: #e7e9ee;\n\n    font-weight: 400;\n    font-size: 1rem;\n\n    &::placeholder {\n      color: var(--text-body);\n    }\n\n    & + input {\n      margin-top: 1rem;\n    }\n  }\n\n  button[type='submit'] {\n    width: 100%;\n    padding: 0 1.5rem;\n    height: 4rem;\n    background: var(--green);\n    color: #FFF;\n    border-radius: 0.25rem;\n    border: 0;\n    font-size: 1rem;\n    margin-top: 1.5rem;\n    font-weight: 600;\n\n    transition: filter 0.2s;\n\n    &:hover {\n      filter: brightness(0.9);\n    }\n  }\n\n  \n`;\n\nexport const TransactionTypeContainer = styled.div`\n  margin: 1rem 0;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 0.5rem;\n`;\n\ninterface RadioBoxProps {\n  isActive: boolean;\n  activeColor: 'green' | 'red';\n}\n\nconst colors = {\n  green: '#33CC95',\n  red: '#E52E4D'\n}\n\nexport const RadioBox = styled.button<RadioBoxProps>`\n    height: 4rem;\n    border: 1px solid #d7d7d7;\n    border-radius: 0.25rem;\n\n    background: ${(props) => props.isActive  \n      ? transparentize(0.8, colors[props.activeColor])\n      : 'transparent'\n    };\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    transition: border-color 0.2s;\n     \n    &:hover {\n      border-color: ${darken(0.1, '#d7d7d7')};\n    }\n\n    img {\n      width: 28px;\n      height: 20px;\n    }\n\n    span {\n      display: inline-block;\n      margin-left: 1rem;\n      font-size: 1rem;\n      color: var(--text-title);\n    }\n`;\n","import { FormEvent, useState } from 'react'\nimport Modal from 'react-modal'\nimport closeImg from '../../assets/close.svg'\nimport incomeImg from '../../assets/income.svg'\nimport outcomeImg from '../../assets/outcome.svg'\nimport { Container, TransactionTypeContainer, RadioBox } from './styles'\n\ninterface NewTransactionModalProps {\n  isOpen: boolean;\n  onRequestClose: () => void;\n}\n\nexport function NewTransactionModal({ isOpen, onRequestClose }: NewTransactionModalProps) {\n  const [title, setTitle] = useState('');\n  const [value, setValue] = useState(0);\n  const [category, setCategory] = useState('');\n  const [type, setType] = useState('deposit');\n\n  function handleCreateNewTransaction(event: FormEvent) {\n    event.preventDefault();\n\n    console.log({title, value, category, type});\n    \n    onRequestClose();\n  }\n\n  return(\n  <Modal \n    isOpen={isOpen}\n    onRequestClose={onRequestClose}\n    overlayClassName=\"react-modal-overlay\"\n    className=\"react-modal-content\"\n  >\n    <button \n      type=\"button\" \n      onClick={onRequestClose} \n      className=\"react-modal-close\"\n    >\n      <img src={closeImg} alt=\"Fechar Modal\" />\n    </button>\n    <Container onSubmit={handleCreateNewTransaction}>\n      <h2>Cadastrar transação</h2>\n\n      <input \n        placeholder=\"Título\" \n        value={title}\n        onChange={event => setTitle(event.target.value)}\n      />\n      <input \n        type=\"number\"\n        placeholder=\"Valor\" \n        value={value}\n        onChange={event => setValue(Number(event.target.value))}\n      />\n\n      <TransactionTypeContainer>\n        <RadioBox\n          type=\"button\"\n          onClick={() => { setType('deposit'); }}\n          isActive={type === 'deposit'}\n          activeColor=\"green\"\n        >\n          <img src={incomeImg} alt=\"Entrada\" />\n          <span>Entrada</span>\n        </RadioBox>\n        <RadioBox\n          type=\"button\"\n          onClick={() => { setType('withdraw'); }}\n          isActive={type === 'withdraw'}\n          activeColor=\"red\"\n        >\n          <img src={outcomeImg} alt=\"Saída\" />\n          <span>Saída</span>\n        </RadioBox>\n      </TransactionTypeContainer>\n\n      <input \n        placeholder=\"Categoria\" \n        value={category}\n        onChange={event => setCategory(event.target.value)}\n      />\n\n      <button type=\"submit\">\n        Cadastrar\n      </button>\n    </Container>\n  </Modal>\n  );\n}","import { createGlobalStyle } from \"styled-components\";\n\n\nexport const GlobalStyle = createGlobalStyle`\n    :root {\n        --backgroung: #f8f2f5;\n        --red: #E52E4D;\n        --green: #33cc95;\n        --blue: #5429CC;\n\n        --blue-light: #6933ff;\n\n        --text-title: #363f5f;\n        --text-body: #969cb3;\n\n        --background: #f0f2f5;\n        --shape: #FFFFFF;\n    }\n    \n    * {\n        margin: 0;\n        padding: 0;\n        box-sizing: border-box;\n    }\n\n    html { \n        @media (min-width: 1080px) {\n            font-size: 93.75%;\n        }\n\n        @media (min-width: 720px) {\n            font-size: 87.5%;\n        }\n    }\n\n    body {\n        background: var(--backgroung);\n        -webkit-font-smoothing: antialiased;\n    }\n\n    body, input, textarea, button {\n        font-family: 'Poppins', sans-serif;\n        font-weight: 400;\n    }\n\n    h1, h2, h3, h4, h5, h6, strong {\n        font-weight: 600;\n    }\n\n    button {\n        cursor: pointer;\n    }\n\n    [disabled] {\n        opacity: 0.6;\n        cursor: not-allowed;\n    }\n\n    .react-modal-overlay {\n\t\t\tbackground: rgba(0, 0, 0, 0.5);\n\n\t\t\tposition: fixed;\n\t\t\ttop: 0;\n\t\t\tbottom: 0;\n\t\t\tright: 0;\n\t\t\tleft: 0;\n\n\t\t\tdisplay: flex;\n\t\t\talign-items: center;\n\t\t\tjustify-content: center;\n    }\n\n    .react-modal-content {\n\t\t\twidth: 100%;\n\t\t\tmax-width: 576px;\n\t\t\tbackground: var(--background);\n\t\t\tpadding: 3rem;\n\t\t\tposition: relative;\n\t\t\tborder-radius: 0.25rem;\n    }\n\n    .react-modal-close {\n\t\t\tposition: absolute;\n\t\t\tright: 1.5rem;\n\t\t\ttop: 1.5rem;\n\t\t\tborder: 0;\n\t\t\tbackground: transparent;\n\n\t\t\t\n\t\t\ttransition: filter 0.2s;\n\n\t\t\t&:hover {\n\t\t\t\tfilter: brightness(0.8);\n\t\t\t}\n    }\n`;","import { useState } from 'react';\nimport Modal from 'react-modal'\nimport { Dashboard } from \"./components/Dashboard\";\nimport { Header } from \"./components/Header\";\nimport { NewTransactionModal } from './components/NewTransactionModal';\n\nimport { GlobalStyle } from \"./styles/global\";\n\nModal.setAppElement('#root');\n\nexport function App() {\n    const [isNewTransactionModalOpen, setIsNewTransactionModalOpen] = useState(false);\n\n\t\tfunction handleOpenNewTransactionModal() {\n\t\t\tsetIsNewTransactionModalOpen(true);\n\t\t}\n\n\t\tfunction handleCloseNewTransactionModal() {\n\t\t\tsetIsNewTransactionModalOpen(false);\n\t\t}\n    \n  return (\n    <>\n      <Header onOpenNewTransactionModal={handleOpenNewTransactionModal}/>\n\n      <Dashboard />\n      \n      <NewTransactionModal \n        isOpen={isNewTransactionModalOpen}\n        onRequestClose={handleCloseNewTransactionModal}\n      />\n\n      <GlobalStyle /> \n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createServer } from 'miragejs';\nimport { App } from './App';\n\ncreateServer({\n  routes() {\n    this.namespace = 'api';\n\n    this.get('/transactions', () => {\n      return [\n        {\n          id: 1,\n          title: 'Transaction 1',\n          amount: 400,\n          type: 'deposit',\n          category: 'Food',\n          createdAt: new Date()\n        }\n      ]\n    })\n  }\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}